[
{'ICLASS': 'CDQE', 'CPL': '3', 'CATEGORY': 'CONVERT', 'EXTENSION': 'LONGMODE', 'PATTERN': '0x98 mode64 rexw_prefix', 'OPERANDS': 'REG0=XED_REG_RAX:w:SUPP REG1=XED_REG_EAX:r:SUPP'},
{'ICLASS': 'CMPSQ', 'CPL': '3', 'CATEGORY': 'STRINGOP', 'EXTENSION': 'LONGMODE', 'ATTRIBUTES': 'fixed_base0 fixed_base1', 'FLAGS': 'MUST [ of-mod df-tst sf-mod zf-mod af-mod pf-mod cf-mod ]', 'PATTERN': '0xA7 mode64 rexw_prefix norep OVERRIDE_SEG0()', 'OPERANDS': 'MEM0:r:SUPP:q BASE0=ArSI():rw:SUPP SEG0=FINAL_DSEG():r:SUPP MEM1:r:SUPP:q BASE1=ArDI():rw:SUPP SEG1=FINAL_ESEG1():r:SUPP'},
{'ICLASS': 'CMPXCHG16B', 'CPL': '3', 'CATEGORY': 'SEMAPHORE', 'EXTENSION': 'LONGMODE', 'ISA_SET': 'CMPXCHG16B', 'ATTRIBUTES': 'REQUIRES_ALIGNMENT LOCKABLE', 'FLAGS': 'MUST [ zf-mod ]', 'PATTERN': '0x0F 0xC7 MOD[mm] MOD!=3 REG[0b001] RM[nnn] mode64  rexw_prefix IMMUNE66() MODRM() nolock_prefix', 'OPERANDS': 'MEM0:rcw:dq REG0=XED_REG_RDX:rcw:SUPP REG1=XED_REG_RAX:rcw:SUPP REG2=XED_REG_RCX:r:SUPP REG3=XED_REG_RBX:r:SUPP'},
{'ICLASS': 'CMPXCHG16B_LOCK', 'DISASM': 'cmpxchg16b', 'CPL': '3', 'CATEGORY': 'SEMAPHORE', 'EXTENSION': 'LONGMODE', 'ISA_SET': 'CMPXCHG16B', 'ATTRIBUTES': 'REQUIRES_ALIGNMENT LOCKED', 'FLAGS': 'MUST [ zf-mod ]', 'PATTERN': '0x0F 0xC7 MOD[mm] MOD!=3 REG[0b001] RM[nnn] mode64  rexw_prefix IMMUNE66() MODRM() lock_prefix', 'OPERANDS': 'MEM0:rcw:dq REG0=XED_REG_RDX:rcw:SUPP REG1=XED_REG_RAX:rcw:SUPP REG2=XED_REG_RCX:r:SUPP REG3=XED_REG_RBX:r:SUPP'},
{'ICLASS': 'CQO', 'CPL': '3', 'CATEGORY': 'CONVERT', 'EXTENSION': 'LONGMODE', 'PATTERN': '0x99 mode64 rexw_prefix', 'OPERANDS': 'REG0=XED_REG_RDX:w:SUPP REG1=XED_REG_RAX:r:SUPP'},
{'ICLASS': 'IRETQ', 'ATTRIBUTES': 'NOTSX', 'CPL': '3', 'CATEGORY': 'RET', 'EXTENSION': 'LONGMODE', 'FLAGS': 'MUST [ id-pop vip-pop vif-pop ac-pop vm-tst vm-pop rf-pop nt-tst nt-pop iopl-tst iopl-pop of-pop df-pop if-pop tf-pop sf-pop zf-pop af-pop pf-pop cf-pop ]', 'PATTERN': '0xCF mode64 rexw_prefix', 'OPERANDS': 'REG0=XED_REG_STACKPOP:rw:spw5:SUPP REG1=XED_REG_RIP:w:SUPP'},
{'ICLASS': 'LODSQ', 'CPL': '3', 'CATEGORY': 'STRINGOP', 'EXTENSION': 'LONGMODE', 'ATTRIBUTES': 'fixed_base0', 'FLAGS': 'READONLY [ df-tst ]', 'PATTERN': '0xAD mode64 rexw_prefix  norep OVERRIDE_SEG0()', 'OPERANDS': 'REG0=XED_REG_RAX:w:SUPP MEM0:r:SUPP:q BASE0=ArSI():rw:SUPP SEG0=FINAL_DSEG():r:SUPP'},
{'ICLASS': 'MOVSQ', 'CPL': '3', 'CATEGORY': 'STRINGOP', 'EXTENSION': 'LONGMODE', 'ATTRIBUTES': 'fixed_base0 fixed_base1', 'FLAGS': 'READONLY [ df-tst ]', 'PATTERN': '0xA5 mode64 rexw_prefix norep OVERRIDE_SEG1()', 'OPERANDS': 'MEM0:w:SUPP:q BASE0=ArDI():rw:SUPP SEG0=FINAL_ESEG():r:SUPP MEM1:r:SUPP:q BASE1=ArSI():rw:SUPP SEG1=FINAL_DSEG1():r:SUPP'},
{'ICLASS': 'MOVSXD', 'CPL': '3', 'CATEGORY': 'DATAXFER', 'EXTENSION': 'LONGMODE', 'COMMENT': 'Prescott reads 32b for the 16b version. My testing indicates Merom, Nehalem and later reference 16b \\', 'PATTERN': '0x63 MOD[mm] MOD!=3 REG[rrr] RM[nnn] mode64 MODRM()', 'OPERANDS': 'REG0=GPRv_R():w MEM0:r:z'},
{'ICLASS': 'MOVSXD', 'CPL': '3', 'CATEGORY': 'DATAXFER', 'EXTENSION': 'LONGMODE', 'PATTERN': '0x63 MOD[0b11] MOD=3 REG[rrr] RM[nnn] mode64', 'OPERANDS': 'REG0=GPRv_R():w REG1=GPRz_B():r'},
{'ICLASS': 'POPFQ', 'ATTRIBUTES': 'NOTSX', 'CPL': '3', 'CATEGORY': 'POP', 'EXTENSION': 'LONGMODE', 'FLAGS': 'MUST [ id-pop vip-tst vif-mod ac-pop vm-tst rf-0 nt-pop iopl-tst iopl-pop of-pop df-pop if-pop tf-pop sf-pop zf-pop af-pop pf-pop cf-pop ]', 'PATTERN': '0x9D mode64 rexw_prefix DF64()', 'OPERANDS': 'REG0=XED_REG_STACKPOP:rw:q:SUPP'},
{'ICLASS': 'PUSHFQ', 'CPL': '3', 'CATEGORY': 'PUSH', 'EXTENSION': 'LONGMODE', 'FLAGS': 'MUST [ id-tst vip-tst vif-tst ac-tst vm-tst rf-tst nt-tst iopl-tst iopl-tst of-tst df-tst if-tst tf-tst sf-tst zf-tst af-tst pf-tst cf-tst ]', 'PATTERN': '0x9C mode64 rexw_prefix  DF64()', 'OPERANDS': 'REG0=XED_REG_STACKPUSH:rw:q:SUPP'},
{'ICLASS': 'REPE_CMPSQ', 'DISASM': 'cmpsq', 'CPL': '3', 'CATEGORY': 'STRINGOP', 'EXTENSION': 'LONGMODE', 'ATTRIBUTES': 'REP  fixed_base0 fixed_base1', 'FLAGS': 'MAY [ of-mod df-tst sf-mod zf-mod af-mod pf-mod cf-mod zf-tst ]', 'PATTERN': '0xA7 mode64 rexw_prefix repe OVERRIDE_SEG0()', 'OPERANDS': 'MEM0:cr:SUPP:q BASE0=ArSI():rcw:SUPP SEG0=FINAL_DSEG():r:SUPP MEM1:cr:SUPP:q BASE1=ArDI():rcw:SUPP SEG1=FINAL_ESEG1():r:SUPP REG0=ArCX():rcw:SUPP'},
{'ICLASS': 'REPE_SCASQ', 'DISASM': 'scasq', 'CPL': '3', 'CATEGORY': 'STRINGOP', 'EXTENSION': 'LONGMODE', 'ATTRIBUTES': 'REP fixed_base0', 'FLAGS': 'MAY [ of-mod df-tst sf-mod zf-mod af-mod pf-mod cf-mod zf-tst ]', 'PATTERN': '0xAF mode64 rexw_prefix  repe', 'OPERANDS': 'REG0=XED_REG_RAX:r:SUPP MEM0:cr:SUPP:q BASE0=ArDI():rcw:SUPP SEG0=FINAL_ESEG():r:SUPP REG1=ArCX():rcw:SUPP'},
{'ICLASS': 'REPNE_CMPSQ', 'DISASM': 'cmpsq', 'CPL': '3', 'CATEGORY': 'STRINGOP', 'EXTENSION': 'LONGMODE', 'ATTRIBUTES': 'REP  fixed_base0 fixed_base1', 'FLAGS': 'MAY [ of-mod df-tst sf-mod zf-mod af-mod pf-mod cf-mod zf-tst ]', 'PATTERN': '0xA7 mode64 rexw_prefix  repne OVERRIDE_SEG0()', 'OPERANDS': 'MEM0:cr:SUPP:q BASE0=ArSI():rcw:SUPP SEG0=FINAL_DSEG():r:SUPP MEM1:cr:SUPP:q BASE1=ArDI():rcw:SUPP SEG1=FINAL_ESEG1():r:SUPP REG0=ArCX():rcw:SUPP'},
{'ICLASS': 'REPNE_SCASQ', 'DISASM': 'scasq', 'CPL': '3', 'CATEGORY': 'STRINGOP', 'EXTENSION': 'LONGMODE', 'ATTRIBUTES': 'REP  fixed_base0', 'FLAGS': 'MAY [ of-mod df-tst sf-mod zf-mod af-mod pf-mod cf-mod zf-tst ]', 'PATTERN': '0xAF mode64 rexw_prefix  repne', 'OPERANDS': 'REG0=XED_REG_RAX:r:SUPP MEM0:cr:SUPP:q BASE0=ArDI():rcw:SUPP SEG0=FINAL_ESEG():r:SUPP REG1=ArCX():rcw:SUPP'},
{'ICLASS': 'REP_LODSQ', 'DISASM': 'lodsq', 'CPL': '3', 'CATEGORY': 'STRINGOP', 'EXTENSION': 'LONGMODE', 'ATTRIBUTES': 'REP  fixed_base0', 'FLAGS': 'READONLY [ df-tst ]', 'PATTERN': '0xAD mode64 rexw_prefix  repne OVERRIDE_SEG0()', 'OPERANDS': 'REG0=XED_REG_RAX:cw:SUPP MEM0:cr:SUPP:q BASE0=ArSI():rcw:SUPP SEG0=FINAL_DSEG():r:SUPP REG1=ArCX():rcw:SUPP'},
{'ICLASS': 'REP_MOVSQ', 'DISASM': 'movsq', 'CPL': '3', 'CATEGORY': 'STRINGOP', 'EXTENSION': 'LONGMODE', 'ATTRIBUTES': 'REP  fixed_base0 fixed_base1', 'FLAGS': 'READONLY [ df-tst ]', 'PATTERN': '0xA5 mode64 rexw_prefix repne OVERRIDE_SEG1()', 'OPERANDS': 'MEM0:cw:SUPP:q BASE0=ArDI():rcw:SUPP SEG0=FINAL_ESEG():r:SUPP MEM1:cr:SUPP:q BASE1=ArSI():rcw:SUPP SEG1=FINAL_DSEG1():r:SUPP REG0=ArCX():rcw:SUPP'},
{'ICLASS': 'REP_STOSQ', 'DISASM': 'stosq', 'CPL': '3', 'CATEGORY': 'STRINGOP', 'EXTENSION': 'LONGMODE', 'ATTRIBUTES': 'REP  fixed_base0', 'FLAGS': 'READONLY [ df-tst ]', 'PATTERN': '0xAB mode64 rexw_prefix  repne', 'OPERANDS': 'MEM0:cw:SUPP:q BASE0=ArDI():rcw:SUPP SEG0=FINAL_ESEG():r:SUPP REG0=XED_REG_RAX:r:SUPP REG1=ArCX():rcw:SUPP'},
{'ICLASS': 'SCASQ', 'CPL': '3', 'CATEGORY': 'STRINGOP', 'EXTENSION': 'LONGMODE', 'ATTRIBUTES': 'fixed_base0', 'FLAGS': 'MUST [ of-mod df-tst sf-mod zf-mod af-mod pf-mod cf-mod ]', 'PATTERN': '0xAF mode64 rexw_prefix  norep', 'OPERANDS': 'REG0=XED_REG_RAX:r:SUPP MEM0:r:SUPP:q BASE0=ArDI():rw:SUPP SEG0=FINAL_ESEG():r:SUPP'},
{'ICLASS': 'STOSQ', 'CPL': '3', 'CATEGORY': 'STRINGOP', 'EXTENSION': 'LONGMODE', 'ATTRIBUTES': 'fixed_base0', 'FLAGS': 'READONLY [ df-tst ]', 'PATTERN': '0xAB mode64 rexw_prefix  norep', 'OPERANDS': 'MEM0:w:SUPP:q BASE0=ArDI():rw:SUPP SEG0=FINAL_ESEG():r:SUPP REG0=XED_REG_RAX:r:SUPP'},
{'ICLASS': 'SWAPGS', 'CPL': '0', 'CATEGORY': 'SYSTEM', 'EXTENSION': 'LONGMODE', 'ATTRIBUTES': 'RING0 NOTSX', 'PATTERN': '0x0F 0x01 MOD[0b11] MOD=3 REG[0b111] RM[0b000] mode64', 'OPERANDS': 'REG0=XED_REG_GSBASE:rw:SUPP'},
{'ICLASS': 'SYSCALL', 'ATTRIBUTES': 'NOTSX', 'CPL': '3', 'CATEGORY': 'SYSCALL', 'EXTENSION': 'LONGMODE', 'ISA_SET': 'LONGMODE', 'FLAGS': 'MUST [ id-mod vip-mod vif-mod ac-mod vm-0 rf-0 nt-mod iopl-mod of-mod df-mod if-mod tf-mod sf-mod zf-mod af-mod pf-mod cf-mod ]', 'PATTERN': '0x0F 0x05 mode64 FORCE64()', 'OPERANDS': 'REG0=XED_REG_RIP:w:SUPP REG1=XED_REG_RCX:w:SUPP REG2=XED_REG_R11:w:SUPP', 'COMMENT': '32B VERSION IS ONLY SUPPORTED ON AMD'},
{'ICLASS': 'SYSRET', 'CPL': '0', 'CATEGORY': 'SYSRET', 'ATTRIBUTES': 'PROTECTED_MODE RING0 NOTSX', 'EXTENSION': 'LONGMODE', 'ISA_SET': 'LONGMODE', 'FLAGS': 'MUST [ id-mod vip-mod vif-mod ac-mod rf-0 nt-mod iopl-mod of-mod df-mod if-mod tf-mod sf-mod zf-mod af-mod pf-mod cf-mod ]', 'PATTERN': '0x0F 0x07 mode64 norexw_prefix', 'OPERANDS': 'REG0=XED_REG_EIP:w:SUPP  REG1=XED_REG_ECX:r:SUPP', 'COMMENT': '32B VERSION IS ONLY SUPPORTED ON AMD'},
{'ICLASS': 'SYSRET64', 'DISASM': 'sysret', 'CPL': '0', 'CATEGORY': 'SYSRET', 'ATTRIBUTES': 'PROTECTED_MODE RING0 NOTSX', 'EXTENSION': 'LONGMODE', 'ISA_SET': 'LONGMODE', 'FLAGS': 'MUST [ id-mod vip-mod vif-mod ac-mod rf-0 nt-mod iopl-mod of-mod df-mod if-mod tf-mod sf-mod zf-mod af-mod pf-mod cf-mod ]', 'PATTERN': '0x0F 0x07 mode64 rexw_prefix', 'OPERANDS': 'REG0=XED_REG_RIP:w:SUPP  REG1=XED_REG_RCX:r:SUPP  REG2=XED_REG_R11:r:SUPP'},
]
