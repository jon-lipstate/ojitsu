{
  "mnemonic": "SQRTPS",
  "summary": "Square Root of Single-Precision Floating-Point Values",
  "index": 614,
  "instructions": [
    {
      "opcode": "NP 0F 51 /r SQRTPS xmm1, xmm2/m128",
      "op_en": "A",
      "x64_x32": "V/V",
      "feature_flag": "SSE",
      "desc": "Computes Square Roots of the packed single-precision floating-point values in xmm2/m128 and stores the result in xmm1."
    },
    {
      "opcode": "VEX.128.0F.WIG 51 /r VSQRTPS xmm1, xmm2/m128",
      "op_en": "A",
      "x64_x32": "V/V",
      "feature_flag": "AVX",
      "desc": "Computes Square Roots of the packed single-precision floating-point values in xmm2/m128 and stores the result in xmm1."
    },
    {
      "opcode": "VEX.256.0F.WIG 51/r VSQRTPS ymm1, ymm2/m256",
      "op_en": "A",
      "x64_x32": "V/V",
      "feature_flag": "AVX",
      "desc": "Computes Square Roots of the packed single-precision floating-point values in ymm2/m256 and stores the result in ymm1."
    },
    {
      "opcode": "EVEX.128.0F.W0 51 /r VSQRTPS xmm1 {k1}{z}, xmm2/m128/m32bcst",
      "op_en": "B",
      "x64_x32": "V/V",
      "feature_flag": "AVX512VL AVX512F",
      "desc": "Computes Square Roots of the packed single-precision floating-point values in xmm2/m128/m32bcst and stores the result in xmm1 subject to writemask k1."
    },
    {
      "opcode": "EVEX.256.0F.W0 51 /r VSQRTPS ymm1 {k1}{z}, ymm2/m256/m32bcst",
      "op_en": "B",
      "x64_x32": "V/V",
      "feature_flag": "AVX512VL AVX512F",
      "desc": "Computes Square Roots of the packed single-precision floating-point values in ymm2/m256/m32bcst and stores the result in ymm1 subject to writemask k1."
    },
    {
      "opcode": "EVEX.512.0F.W0 51/r VSQRTPS zmm1 {k1}{z}, zmm2/m512/m32bcst{er}",
      "op_en": "B",
      "x64_x32": "V/V",
      "feature_flag": "AVX512F",
      "desc": "Computes Square Roots of the packed single-precision floating-point values in zmm2/m512/m32bcst and stores the result in zmm1 subject to writemask k1."
    }
  ],
  "op_en": [
    {
      "op_en": "A",
      "tuple_type": "NA",
      "operand_1": "ModRM:reg (w)",
      "operand_2": "ModRM:r/m (r)",
      "operand_3": "NA",
      "operand_4": "NA"
    },
    {
      "op_en": "B",
      "tuple_type": "Full",
      "operand_1": "ModRM:reg (w)",
      "operand_2": "ModRM:r/m (r)",
      "operand_3": "NA",
      "operand_4": "NA"
    }
  ],
  "page_desc": []
}
