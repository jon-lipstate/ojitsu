{
  "mnemonic": "MOVZX",
  "summary": "Move with Zero-Extend",
  "index": 388,
  "instructions": [
    {
      "opcode": "0F B6 /r",
      "instr": "MOVZX r16, r/m8",
      "op_en": "RM",
      "x64": "Valid",
      "x32": "Valid",
      "desc": "Move byte to word with zero-extension."
    },
    {
      "opcode": "0F B6 /r",
      "instr": "MOVZX r32, r/m8",
      "op_en": "RM",
      "x64": "Valid",
      "x32": "Valid",
      "desc": "Move byte to doubleword, zero-extension."
    },
    {
      "opcode": "REX.W + 0F B6 /r",
      "instr": "MOVZX r64, r/m8*",
      "op_en": "RM",
      "x64": "Valid",
      "x32": "N.E.",
      "desc": "Move byte to quadword, zero-extension."
    },
    {
      "opcode": "0F B7 /r",
      "instr": "MOVZX r32, r/m16",
      "op_en": "RM",
      "x64": "Valid",
      "x32": "Valid",
      "desc": "Move word to doubleword, zero-extension."
    },
    {
      "opcode": "REX.W + 0F B7 /r",
      "instr": "MOVZX r64, r/m16",
      "op_en": "RM",
      "x64": "Valid",
      "x32": "N.E.",
      "desc": "Move word to quadword, zero-extension."
    }
  ],
  "op_en": [
    {
      "op_en": "RM",
      "tuple_type": "ModRM:reg (w)",
      "operand_1": "ModRM:r/m (r)",
      "operand_2": "NA",
      "operand_3": "NA"
    }
  ],
  "page_desc": [
    "Copies the contents of the source operand (register or memory location) to the destination operand (register) and zero extends the value. The size of the converted value depends on the operand-size attribute.",
    "In 64-bit mode, the instruction\u2019s default operation size is 32 bits. Use of the REX.R prefix permits access to additional registers (R8-R15). Use of the REX.W prefix promotes operation to 64 bit operands. See the summary chart at the beginning of this section for encoding data and limits."
  ]
}
