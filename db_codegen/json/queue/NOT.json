{
  "mnemonic": "NOT",
  "summary": "One's Complement Negation",
  "index": 399,
  "instructions": [
    {
      "opcode": "F6 /2",
      "instr": "NOT r/m8",
      "op_en": "M",
      "x64": "Valid",
      "x32": "Valid",
      "desc": "Reverse each bit of r/m8."
    },
    {
      "opcode": "REX + F6 /2",
      "instr": "NOT r/m8*",
      "op_en": "M",
      "x64": "Valid",
      "x32": "N.E.",
      "desc": "Reverse each bit of r/m8."
    },
    {
      "opcode": "F7 /2",
      "instr": "NOT r/m16",
      "op_en": "M",
      "x64": "Valid",
      "x32": "Valid",
      "desc": "Reverse each bit of r/m16."
    },
    {
      "opcode": "F7 /2",
      "instr": "NOT r/m32",
      "op_en": "M",
      "x64": "Valid",
      "x32": "Valid",
      "desc": "Reverse each bit of r/m32."
    },
    {
      "opcode": "REX.W + F7 /2",
      "instr": "NOT r/m64",
      "op_en": "M",
      "x64": "Valid",
      "x32": "N.E.",
      "desc": "Reverse each bit of r/m64."
    }
  ],
  "op_en": [
    {
      "op_en": "M",
      "tuple_type": "ModRM:r/m (r, w)",
      "operand_1": "NA",
      "operand_2": "NA",
      "operand_3": "NA"
    }
  ],
  "page_desc": [
    "Performs a bitwise NOT operation (each 1 is set to 0, and each 0 is set to 1) on the destination operand and stores the result in the destination operand location. The destination operand can be a register or a memory location.",
    "This instruction can be used with a LOCK prefix to allow the instruction to be executed atomically.",
    "In 64-bit mode, the instruction\u2019s default operation size is 32 bits. Using a REX prefix in the form of REX.R permits access to additional registers (R8-R15). Using a REX prefix in the form of REX.W promotes operation to 64 bits. See the summary chart at the beginning of this section for encoding data and limits."
  ]
}
