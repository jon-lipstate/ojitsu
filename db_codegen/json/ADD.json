{
  "mnemonic": "ADD",
  "summary": "Add",
  "index": 6,
  "tables": [
    [
      {
        "Opcode": "04 ib",
        "Instruction": "ADD AL, imm8",
        "Op/En": "I",
        "64-bit Mode": "Valid",
        "Compat/Leg Mode": "Valid",
        "Description": "Add imm8 to AL."
      },
      {
        "Opcode": "05 iw",
        "Instruction": "ADD AX, imm16",
        "Op/En": "I",
        "64-bit Mode": "Valid",
        "Compat/Leg Mode": "Valid",
        "Description": "Add imm16 to AX."
      },
      {
        "Opcode": "05 id",
        "Instruction": "ADD EAX, imm32",
        "Op/En": "I",
        "64-bit Mode": "Valid",
        "Compat/Leg Mode": "Valid",
        "Description": "Add imm32 to EAX."
      },
      {
        "Opcode": "REX.W + 05 id",
        "Instruction": "ADD RAX, imm32",
        "Op/En": "I",
        "64-bit Mode": "Valid",
        "Compat/Leg Mode": "N.E.",
        "Description": "Add imm32 sign-extended to 64-bits to RAX."
      },
      {
        "Opcode": "80 /0 ib",
        "Instruction": "ADD r/m8, imm8",
        "Op/En": "MI",
        "64-bit Mode": "Valid",
        "Compat/Leg Mode": "Valid",
        "Description": "Add imm8 to r/m8."
      },
      {
        "Opcode": "REX + 80 /0 ib",
        "Instruction": "ADD r/m8*, imm8",
        "Op/En": "MI",
        "64-bit Mode": "Valid",
        "Compat/Leg Mode": "N.E.",
        "Description": "Add sign-extended imm8 to r/m8."
      },
      {
        "Opcode": "81 /0 iw",
        "Instruction": "ADD r/m16, imm16",
        "Op/En": "MI",
        "64-bit Mode": "Valid",
        "Compat/Leg Mode": "Valid",
        "Description": "Add imm16 to r/m16."
      },
      {
        "Opcode": "81 /0 id",
        "Instruction": "ADD r/m32, imm32",
        "Op/En": "MI",
        "64-bit Mode": "Valid",
        "Compat/Leg Mode": "Valid",
        "Description": "Add imm32 to r/m32."
      },
      {
        "Opcode": "REX.W + 81 /0 id",
        "Instruction": "ADD r/m64, imm32",
        "Op/En": "MI",
        "64-bit Mode": "Valid",
        "Compat/Leg Mode": "N.E.",
        "Description": "Add imm32 sign-extended to 64-bits to r/m64."
      },
      {
        "Opcode": "83 /0 ib",
        "Instruction": "ADD r/m16, imm8",
        "Op/En": "MI",
        "64-bit Mode": "Valid",
        "Compat/Leg Mode": "Valid",
        "Description": "Add sign-extended imm8 to r/m16."
      },
      {
        "Opcode": "83 /0 ib",
        "Instruction": "ADD r/m32, imm8",
        "Op/En": "MI",
        "64-bit Mode": "Valid",
        "Compat/Leg Mode": "Valid",
        "Description": "Add sign-extended imm8 to r/m32."
      },
      {
        "Opcode": "REX.W + 83 /0 ib",
        "Instruction": "ADD r/m64, imm8",
        "Op/En": "MI",
        "64-bit Mode": "Valid",
        "Compat/Leg Mode": "N.E.",
        "Description": "Add sign-extended imm8 to r/m64."
      },
      {
        "Opcode": "00 /r",
        "Instruction": "ADD r/m8, r8",
        "Op/En": "MR",
        "64-bit Mode": "Valid",
        "Compat/Leg Mode": "Valid",
        "Description": "Add r8 to r/m8."
      },
      {
        "Opcode": "REX + 00 /r",
        "Instruction": "ADD r/m8*, r8*",
        "Op/En": "MR",
        "64-bit Mode": "Valid",
        "Compat/Leg Mode": "N.E.",
        "Description": "Add r8 to r/m8."
      },
      {
        "Opcode": "01 /r",
        "Instruction": "ADD r/m16, r16",
        "Op/En": "MR",
        "64-bit Mode": "Valid",
        "Compat/Leg Mode": "Valid",
        "Description": "Add r16 to r/m16."
      },
      {
        "Opcode": "01 /r",
        "Instruction": "ADD r/m32, r32",
        "Op/En": "MR",
        "64-bit Mode": "Valid",
        "Compat/Leg Mode": "Valid",
        "Description": "Add r32 to r/m32."
      },
      {
        "Opcode": "REX.W + 01 /r",
        "Instruction": "ADD r/m64, r64",
        "Op/En": "MR",
        "64-bit Mode": "Valid",
        "Compat/Leg Mode": "N.E.",
        "Description": "Add r64 to r/m64."
      },
      {
        "Opcode": "02 /r",
        "Instruction": "ADD r8, r/m8",
        "Op/En": "RM",
        "64-bit Mode": "Valid",
        "Compat/Leg Mode": "Valid",
        "Description": "Add r/m8 to r8."
      },
      {
        "Opcode": "REX + 02 /r",
        "Instruction": "ADD r8*, r/m8*",
        "Op/En": "RM",
        "64-bit Mode": "Valid",
        "Compat/Leg Mode": "N.E.",
        "Description": "Add r/m8 to r8."
      },
      {
        "Opcode": "03 /r",
        "Instruction": "ADD r16, r/m16",
        "Op/En": "RM",
        "64-bit Mode": "Valid",
        "Compat/Leg Mode": "Valid",
        "Description": "Add r/m16 to r16."
      },
      {
        "Opcode": "03 /r",
        "Instruction": "ADD r32, r/m32",
        "Op/En": "RM",
        "64-bit Mode": "Valid",
        "Compat/Leg Mode": "Valid",
        "Description": "Add r/m32 to r32."
      },
      {
        "Opcode": "REX.W + 03 /r",
        "Instruction": "ADD r64, r/m64",
        "Op/En": "RM",
        "64-bit Mode": "Valid",
        "Compat/Leg Mode": "N.E.",
        "Description": "Add r/m64 to r64."
      }
    ],
    [
      {
        "Op/En": "RM",
        "Operand 1": "ModRM:reg (r, w)",
        "Operand 2": "ModRM:r/m (r)",
        "Operand 3": "NA",
        "Operand 4": "NA"
      },
      {
        "Op/En": "MR",
        "Operand 1": "ModRM:r/m (r, w)",
        "Operand 2": "ModRM:reg (r)",
        "Operand 3": "NA",
        "Operand 4": "NA"
      },
      {
        "Op/En": "MI",
        "Operand 1": "ModRM:r/m (r, w)",
        "Operand 2": "imm8/16/32",
        "Operand 3": "NA",
        "Operand 4": "NA"
      },
      {
        "Op/En": "I",
        "Operand 1": "AL/AX/EAX/RAX",
        "Operand 2": "imm8/16/32",
        "Operand 3": "NA",
        "Operand 4": "NA"
      }
    ]
  ]
}
